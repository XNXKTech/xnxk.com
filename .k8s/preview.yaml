apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-{prid}
  namespace: xnxk
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-xnxk-web-{prid}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-xnxk-web-{prid}
      annotations:
        buildid: "{build-id}"
    spec:
      affinity: { }
      containers:
        - env:
          - name: TZ
            value: Asia/Shanghai
          image: xnxktech.tencentcloudcr.com/xnxktech/xnxk.com:pr-{prid}
          imagePullPolicy: Always
          name: xnxk-{prid}
          ports:
            - containerPort: 80
              name: web-{prid}
              protocol: TCP
          resources: { }
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: tcr-xnxk
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: web-{prid}
  namespace: xnxk
spec:
  ports:
    - name: web-{prid}
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    workload.user.cattle.io/workloadselector: apps.deployment-xnxk-web-{prid}
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: deploy-preview-{prid}-xnxk-web.virtualstarry.com
  namespace: xnxk
spec:
  ingressClassName: nginx
  rules:
    - host: deploy-preview-{prid}-xnxk-web.virtualstarry.com
      http:
        paths:
          - backend:
              service:
                name: web-{prid}
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
